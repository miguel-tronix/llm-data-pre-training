
[project]
name = "llm-data-pre-training"
version = "0.1.0"
description = "Project to showcase a data prep pipeline for LLM pretraining"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Miguel de Sousa", email = "miguel.desousa@protonmail.com"},
]
requires-python = ">=3.10"
dependencies = [
    "aiofiles",
    "aiohttp",
    "pyarrow",
    "pandas",
    "pydantic>=2.0.0",
    "tqdm",
    "zstandard",
    "jsonlines",
    "dotenv>=0.9.9",
    "tokenizers>=0.22.0",
    "typer>=0.17.4",
    "datasets>=4.1.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",  # Replace black, isort, flake8 with ruff
    "mypy>=1.4.0",  # Keep mypy for type checking
    "pre-commit>=3.5.0",
]

[tool.ruff]
# Enable pycodestyle (E), pyflakes (F), and mccabe (C) codes by default
select = ["E", "F", "C", "B", "I", "UP", "PL", "RUF"]
ignore = []
line-length = 88

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.mccabe]
max-complexity = 18

[tool.ruff.isort]
known-first-party = ["llm_data_pretraining"]

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.scripts]
format = "ruff format src/"
lint = "ruff check src/"
check = "ruff format --check src/ && ruff check src/"
fix = "ruff check --fix src/ && ruff format src/"
# Add a Typer-based CLI entry point
main = "typer src/main.py run"
